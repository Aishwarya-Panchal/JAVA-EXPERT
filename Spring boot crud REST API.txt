-------------------------------------------------------------------------------------------------
FILE NAME - Product.java
-------------------------------------------------------------------------------------------------


import javax.persistence.Entity;

import javax.persistence.GeneratedValue;

import javax.persistence.Id;

import javax.persistence.Table;

@Data

@A11ArgsConstructor

@NoArgsConstructor

@Entity

@Table(name "PRODUCT_TBL") =

public class Product {

	@Id

	@GeneratedValue

	private int id;

	private String name;

	private int quantity;

	private double price;

}

-------------------------------------------------------------------------------------------------
FILE NAME - ProductRepository.java
-------------------------------------------------------------------------------------------------


package com.ass.crud.example.repository;

import com.ass.crud.example.entity.Product; 

import org.springframework.data.jpa.repository.JpaRepository;

public interface ProductRepository extends JpaRepository<Product, Integer> { 
	
	Product findByName(String name);

}

-------------------------------------------------------------------------------------------------
FILE NAME - application.properties
-------------------------------------------------------------------------------------------------

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url = jdbc:mysql://localhost:3306/college

spring.datasource.username = root

spring.datasource.password =Password

spring.jpa.show-sql = true

spring.jpa.hibernate.ddl-auto = update
 
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=9191


-------------------------------------------------------------------------------------------------
FILE NAME - ProductService.java
-------------------------------------------------------------------------------------------------

package com.ass.crud.example.service;

import com.ass.crud.example.entity.Product;

import com.ass.crud.example.repository.ProductRepository; 

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework. stereotype.Service;

@Service

public class Product Service {

	@Autowired

	private ProductRepository repository;

	public Product saveProduct (Product product){ 
	
		return repository.save(product);
	
	public List<Product> getProducts(){
	
		 return repository.findAll();
	}

	public Product getProductById(int id) { 

	return repository.findById(id).orElse(other: null);

	}

	 public Product getProductByName(String name){ 

		return repository.findByName(name);
	}

	public String deleteProduct (int id) {

		repository.deleteById(id); 
		
		return "product removed !! "+id;

	}

	public Product updateProduct (Product product) {

		existingProduct.setName(product.getName()); 

		existingProduct.setQuantity (product.getQuantity());

		Product existing Product-repository.findById(product.getId()).orElse( other: null);

		existingProduct.setPrice(product.getPrice()); 

		return repository.save(existing Product);
	}

	}
}

-------------------------------------------------------------------------------------------------
FILE NAME - ProductController.java
-------------------------------------------------------------------------------------------------

package com.ass.crud.example.controller;

import com.ass.crud.example.service.ProductService; 

import org.springframework.beans.factory.annotation.Autowired; 

import org.springframework.web.bind.annotation. RestController;

@RestController

public class ProductController {

	@Autowired

	private ProductService service;

	(@PostMapping("/addProduct")

	public Product addProduct (@RequestBody Product product) {

		return service.saveProduct (product);

	}

	@PostMapping("/addProducts")

	public List<Product> addProducts (@RequestBody List<Product> products) {

		return service.saveProducts (products);

	}

	@GetMapping("/products")

	public List<Product> findAllProducts() {

		return service.getProducts();

	}

	@GetMapping("/product/{id}")

	public Product findProductById(@PathVariable int id) {

		return service.getProductById(id);

	}
	@GetMapping("/product/{name}")

	public Product find ProductByName(@PathVariable String name)

		return service.getProductByName(name);

	}

	@PutMapping("/update")

	public Product updateProduct(@RequestBody Product product) { 
		
		return service.updateProduct(product);

	}

	@DeleteMapping("/delete/{id}")

	public String deleteProduct(@PathVariable int id) {

		return service.deleteProduct(id);
	}
}






















